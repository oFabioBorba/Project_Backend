CREATE TABLE Users (
    id_user SERIAL PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE,
    hash_password VARCHAR(255) NOT NULL,
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE User_Profile (
    id_profile SERIAL PRIMARY KEY,
    id_user INT NOT NULL UNIQUE, 
    neighbourhood VARCHAR(100) NOT NULL,
    city VARCHAR(50) NOT NULL,
    CEP VARCHAR(8) NOT NULL,
    UF varchar(2) NOT NULL,
    profile_photo BYTEA NOT NULL,
    About varchar (244),
    feedback decimal(2,1) default 0,
    CONSTRAINT fk_user_profile
    FOREIGN KEY (id_user)
    REFERENCES Users (id_user)
);


CREATE TABLE categories (
    id_category SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE
);

INSERT INTO categories (name) VALUES
('üè† Servi√ßos Dom√©sticos'),       -- faxina, diarista, encanador, eletricista
('üìö Aulas e Refor√ßo'),           -- refor√ßo escolar, idiomas, cursos
('üí™ Sa√∫de e Bem-estar'),         -- personal, fisioterapia, massagem
('üíá‚Äç‚ôÄÔ∏è Beleza e Cuidados Pessoais'),-- manicure, cabeleireiro, est√©tica
('üöó Servi√ßos Automotivos'),      -- mec√¢nico, lava-jato, funilaria
('üíª Tecnologia e Inform√°tica'),  -- manuten√ß√£o de PCs, suporte t√©cnico
('üéâ Eventos e Festas'),          -- DJ, fot√≥grafo, buffet, decora√ß√£o
('üê∂ Servi√ßos para Pets'),        -- banho e tosa, adestrador, pet sitter
('üèóÔ∏è Constru√ß√£o e Reparos'),      -- pedreiro, marceneiro, pintor
('üöö Entrega e Mudan√ßas'),        -- motoboy, carreto, fretes
('‚öñÔ∏è Consultoria e Jur√≠dico');    -- contador, advogado, consultor

CREATE TABLE advertisement (
    id_advertisement SERIAL PRIMARY KEY,
    id_user INT NOT NULL,
    id_category INT NOT NULL,
    photo BYTEA,
    photo2 BYTEA,   
    photo3 BYTEA,
    photo4 BYTEA,
    title VARCHAR(150) NOT NULL,
    description TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_advertisement_user FOREIGN KEY (id_user) REFERENCES Users (id_user),
    CONSTRAINT fk_aadvertisement_categoria FOREIGN KEY (id_category) REFERENCES categories (id_category)
);
